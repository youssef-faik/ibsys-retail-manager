{
  "openapi": "3.0.1",
  "info": {
    "title": "IBSYS RETAIL MANAGER API",
    "description": "Cette API propose plusieurs points de terminaison pour gérer les opérations de vente au détail, telles que la création et la mise à jour de produits, la gestion des stocks et le traitement des commandes.",
    "version": "x.x.x"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Produit",
      "description": "L'API Produit. Contient toutes les opérations pouvant être effectuées sur un produit"
    },
    {
      "name": "Configuration",
      "description": "API Configuration. Contient toutes les opérations de configuration de l'API"
    },
    {
      "name": "Utilisateur",
      "description": "API Utilisateur. Contient toutes les opérations pouvant être effectuées sur un utilisateur. Nécessite le rôle ADMIN."
    },
    {
      "name": "Categorie",
      "description": "L'API Catégorie. Contient toutes les opérations pouvant être effectuées sur une Catégorie."
    },
    {
      "name": "Facture",
      "description": "API Facture. Contient toutes les opérations pouvant être effectuées sur une facture."
    },
    {
      "name": "Tableau de bord",
      "description": "Points d'accès API pour les métriques du tableau de bord"
    },
    {
      "name": "Element Panier",
      "description": "API pour gérer les éléments du panier."
    },
    {
      "name": "Client",
      "description": "L'API Client. Contient toutes les opérations pouvant être effectuées sur un client."
    },
    {
      "name": "Authentification",
      "description": "L'API d'authentification. Contient le point de terminaison d'authentification."
    }
  ],
  "paths": {
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "Utilisateur"
        ],
        "summary": "Obtenir les détails de l'utilisateur.",
        "description": "Obtenir les détails de l'utilisateur avec l'ID donné.",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de l'utilisateur à récupérer.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Utilisateur récupéré avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Interdit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur introuvable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Utilisateur"
        ],
        "summary": "Mettre à jour les détails de l'utilisateur.",
        "description": "Mettre à jour les détails de l'utilisateur avec l'ID donné.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de l'utilisateur à mettre à jour.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 123
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Utilisateur mis à jour avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Entrée non valide.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Interdit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur introuvable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Utilisateur"
        ],
        "summary": "Supprimer un utilisateur.",
        "description": "Supprimer l'utilisateur avec l'ID donné.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de l'utilisateur à supprimer.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Utilisateur supprimé avec succès."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Interdit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur introuvable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/users/change-password": {
      "put": {
        "tags": [
          "Utilisateur"
        ],
        "summary": "Modifier le mot de passe de l'utilisateur.",
        "description": "Met à jour le mot de passe de l'utilisateur avec un nouveau.",
        "operationId": "changePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Mot de passe modifié avec succès."
          },
          "400": {
            "description": "Requête ou paramètres non valides.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Accès non autorisé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/products/{id}": {
      "get": {
        "tags": [
          "Produit"
        ],
        "summary": "Obtenir les détails du produit",
        "description": "Obtenir les détails du produit avec l'ID donné.",
        "operationId": "getProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "L'ID du produit à récupérer.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Détails du produit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Requête incorrecte. Paramètres d'entrée non valides.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé. Les informations d'authentification sont manquantes ou invalides.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur. Une erreur s'est produite lors du traitement de la requête.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Produit"
        ],
        "summary": "Mettre à jour les détails du produit.",
        "description": "Mettre à jour les détails du produit avec l'ID donné.",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "L'ID du produit à mettre à jour.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Produit mis à jour avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Requête incorrecte. Paramètres d'entrée non valides.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé. Les informations d'authentification sont manquantes ou invalides.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur. Une erreur s'est produite lors du traitement de la requête.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Produit"
        ],
        "summary": "Supprimer un produit",
        "description": "Supprimer un produit avec l'ID donné.",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "L'ID du produit à supprimer.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Produit supprimé avec succès.",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Requête incorrecte. Paramètres d'entrée non valides.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé. Les informations d'authentification sont manquantes ou invalides.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur. Une erreur s'est produite lors du traitement de la requête.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/customers/{ice}": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Obtenir les détails du client.",
        "description": "Obtenir les détails du client avec le numéro ICE donné.",
        "operationId": "getCustomer",
        "parameters": [
          {
            "name": "ice",
            "in": "path",
            "description": "Numéro ICE du client à récupérer.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 563456789123456
          }
        ],
        "responses": {
          "200": {
            "description": "Client récupéré avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Accès interdit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client non trouvé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Client"
        ],
        "summary": "Mettre à jour les détails du client.",
        "description": "Mettre à jour les détails du client avec l'ICE donné.",
        "operationId": "updateCustomer",
        "parameters": [
          {
            "name": "ice",
            "in": "path",
            "description": "ICE du client à mettre à jour.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 563456789123456
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Client mis à jour avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Entrée non valide.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Accès interdit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client introuvable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Client"
        ],
        "summary": "Supprimer un client.",
        "description": "Supprimer un client avec l'ICE donné.",
        "operationId": "deleteCustomer",
        "parameters": [
          {
            "name": "ice",
            "in": "path",
            "description": "ICE du client à supprimer.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 563456789123456
          }
        ],
        "responses": {
          "204": {
            "description": "Client supprimé avec succès."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Accès interdit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client introuvable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/configurations": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Obtenir toutes les configurations.",
        "description": "Obtenir une liste contenant les détails de toutes les configurations.",
        "operationId": "getAllConfigurations",
        "responses": {
          "200": {
            "description": "Configurations récupérées avec succès.",
            "content": {
              "application/json": {
                "example": {
                  "NEXT_INVOICE_NUMBER": "123"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Interdit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Configurations non trouvées.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Configuration"
        ],
        "summary": "Définir une ou plusieurs valeurs de configuration",
        "description": "Définir les valeurs d'une ou plusieurs configurations",
        "operationId": "setConfigurationValues",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Valeurs de configuration définies avec succès"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Interdit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/categories/{id}": {
      "get": {
        "tags": [
          "Categorie"
        ],
        "summary": "Obtenir les détails d'une catégorie.",
        "description": "Obtenir les détails d'une catégorie avec le numéro ID donné.",
        "operationId": "getCategoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Numéro ID de la catégorie à récupérer.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Catégorie récupérée avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Accès interdit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Catégorie non trouvée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Categorie"
        ],
        "summary": "Mettre à jour les détails de la catégorie.",
        "description": "Mettre à jour les détails de la catégorie avec l'ID donné.",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la catégorie à mettre à jour.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Catégorie mise à jour avec succès."
          },
          "400": {
            "description": "Entrée non valide.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Accès interdit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Catégorie introuvable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Categorie"
        ],
        "summary": "Supprimer une catégorie.",
        "description": "Supprimer une catégorie avec l'ID donné.",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la catégorie à supprimer.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Catégorie supprimée avec succès."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Accès interdit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Catégorie introuvable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "Utilisateur"
        ],
        "summary": "Obtenir tous les utilisateurs.",
        "description": "Obtenir une liste contenant les détails de tous les utilisateurs.",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "Utilisateurs récupérés avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Interdit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateurs introuvables.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Utilisateur"
        ],
        "summary": "Créer un utilisateur.",
        "description": "Créer un nouvel utilisateur avec les détails donnés.",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Utilisateur créé avec succès."
          },
          "400": {
            "description": "Entrée non valide.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Interdit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/products": {
      "get": {
        "tags": [
          "Produit"
        ],
        "summary": "Obtenir tous les produits",
        "description": "Obtenir une liste contenant les détails de tous les produits.",
        "operationId": "getAllProducts",
        "responses": {
          "200": {
            "description": "Liste de tous les produits récupérée avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requête incorrecte. Paramètres d'entrée non valides.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé. Les informations d'authentification sont manquantes ou invalides.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur. Une erreur s'est produite lors du traitement de la requête.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Produit"
        ],
        "summary": "Créer un produit.",
        "description": "Créer un nouveau produit avec les détails donnés.",
        "operationId": "createProduct",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Produit créé avec succès."
          },
          "400": {
            "description": "Requête incorrecte. Paramètres d'entrée non valides.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé. Les informations d'authentification sont manquantes ou invalides.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur. Une erreur s'est produite lors du traitement de la requête.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/invoices": {
      "get": {
        "tags": [
          "Facture"
        ],
        "summary": "Obtenir toutes les factures.",
        "description": "Obtenir une liste contenant les détails de toutes les factures.",
        "operationId": "getAllInvoices",
        "responses": {
          "200": {
            "description": "Factures récupérées avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Interdit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Factures non trouvées.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Facture"
        ],
        "summary": "Créer une facture.",
        "description": "Créer une nouvelle facture avec les détails fournis.",
        "operationId": "createInvoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Facture créée avec succès."
          },
          "400": {
            "description": "Entrée invalide.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Interdit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/customers": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Obtenir tous les clients.",
        "description": "Obtenir une liste contenant les détails de tous les clients.",
        "operationId": "getAllCustomers",
        "responses": {
          "200": {
            "description": "Clients récupérés avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Accès interdit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Créer un client.",
        "description": "Créer un nouveau client avec les détails donnés.",
        "operationId": "createCustomer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Client créé avec succès."
          },
          "400": {
            "description": "Entrée non valide.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Accès interdit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/categories": {
      "get": {
        "tags": [
          "Categorie"
        ],
        "summary": "Obtenir toutes les catégories.",
        "description": "Obtenir une liste de toutes les catégories.",
        "operationId": "getAllCategories",
        "responses": {
          "200": {
            "description": "Catégories récupérées avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Accès interdit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Categorie"
        ],
        "summary": "Créer une catégorie.",
        "description": "Créer une nouvelle catégorie avec les détails donnés.",
        "operationId": "createCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Catégorie créée avec succès."
          },
          "400": {
            "description": "Entrée non valide.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Accès interdit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/cart-item": {
      "post": {
        "tags": [
          "Element Panier"
        ],
        "summary": "Enregistrer un élément du panier.",
        "description": "Enregistre un nouvel élément du panier.",
        "operationId": "saveCartItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartItemRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Élément du panier enregistré."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Produit non trouvé."
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "Authentification"
        ],
        "summary": "Authentifier l'utilisateur.",
        "description": "Permet aux utilisateurs de s'authentifier et de récupérer leur jeton JWT.",
        "operationId": "authenticate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{id}": {
      "get": {
        "tags": [
          "Facture"
        ],
        "summary": "Obtenir les détails d'une facture.",
        "description": "Obtenir les détails de la facture avec l'identifiant donné.",
        "operationId": "getInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la facture à récupérer.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Facture récupérée avec succès.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Interdit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Facture non trouvée.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/invoices/{id}/pdf": {
      "get": {
        "tags": [
          "Facture"
        ],
        "summary": "Obtenir un fichier PDF d'une facture.",
        "description": "Récupérer un fichier PDF de la facture avec l'identifiant fourni.",
        "operationId": "getInvoiceReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la facture à récupérer.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Fichier PDF de la facture généré.",
            "content": {
              "application/pdf": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Facture non trouvée.",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/dashboard/sales": {
      "get": {
        "tags": [
          "Tableau de bord"
        ],
        "summary": "Obtenir les données de ventes",
        "description": "Obtenir le nombre de ventes sur une période donnée.",
        "operationId": "getSales",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Date de début (format ISO 8601, par ex. : 2023-05-01)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2023-05-01"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Date de fin (format ISO 8601, par ex. : 2023-05-31)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2023-05-31"
          }
        ],
        "responses": {
          "200": {
            "description": "Données de ventes récupérées avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartDataDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Interdit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/dashboard/orders": {
      "get": {
        "tags": [
          "Tableau de bord"
        ],
        "summary": "Obtenir les données de commandes",
        "description": "Obtenir le nombre de commandes créées sur une période donnée.",
        "operationId": "getOrders",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Date de début (format ISO 8601, par ex. : 2023-05-01)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2023-05-01"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Date de fin (format ISO 8601, par ex. : 2023-05-31)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2023-05-31"
          }
        ],
        "responses": {
          "200": {
            "description": "Données de commandes récupérées avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartDataDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Interdit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/dashboard/customers": {
      "get": {
        "tags": [
          "Tableau de bord"
        ],
        "summary": "Obtenir les données des clients",
        "description": "Obtenir le nombre de clients créés sur une période donnée.",
        "operationId": "getCustomers",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Date de début (format ISO 8601, par ex. : 2023-05-01)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2023-05-01"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Date de fin (format ISO 8601, par ex. : 2023-05-31)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2023-05-31"
          }
        ],
        "responses": {
          "200": {
            "description": "Données des clients récupérées avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartDataDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Interdit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/configurations/{key}": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Obtenir un paramètre de configuration.",
        "description": "Obtenir un paramètre de configuration avec la clé donnée.",
        "operationId": "getConfigurationValue",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Clé de configuration",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Énumération des options de configuration.",
              "enum": [
                "NEXT_INVOICE_NUMBER"
              ]
            },
            "example": "NEXT_INVOICE_NUMBER"
          }
        ],
        "responses": {
          "200": {
            "description": "Paramètre récupéré avec succès.",
            "content": {
              "application/json": {
                "example": {
                  "NEXT_INVOICE_NUMBER": "123"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Interdit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Paramètre non trouvé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    },
    "/api/v1/cart-item/{id}": {
      "get": {
        "tags": [
          "Element Panier"
        ],
        "summary": "Obtenir un élément du panier par ID.",
        "description": "Récupère un élément du panier en utilisant son ID.",
        "operationId": "geCartItemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de l'élément du panier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 563456789123456
          }
        ],
        "responses": {
          "200": {
            "description": "Élément du panier trouvé.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Élément du panier non trouvé.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CartItem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer_Authentication": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "title": "Schéma de réponse d'erreur",
        "type": "object",
        "properties": {
          "httpStatus": {
            "type": "string",
            "description": "Le code de statut HTTP associé à l'erreur.",
            "example": "400",
            "enum": [
              "100 CONTINUE",
              "101 SWITCHING_PROTOCOLS",
              "102 PROCESSING",
              "103 EARLY_HINTS",
              "103 CHECKPOINT",
              "200 OK",
              "201 CREATED",
              "202 ACCEPTED",
              "203 NON_AUTHORITATIVE_INFORMATION",
              "204 NO_CONTENT",
              "205 RESET_CONTENT",
              "206 PARTIAL_CONTENT",
              "207 MULTI_STATUS",
              "208 ALREADY_REPORTED",
              "226 IM_USED",
              "300 MULTIPLE_CHOICES",
              "301 MOVED_PERMANENTLY",
              "302 FOUND",
              "302 MOVED_TEMPORARILY",
              "303 SEE_OTHER",
              "304 NOT_MODIFIED",
              "305 USE_PROXY",
              "307 TEMPORARY_REDIRECT",
              "308 PERMANENT_REDIRECT",
              "400 BAD_REQUEST",
              "401 UNAUTHORIZED",
              "402 PAYMENT_REQUIRED",
              "403 FORBIDDEN",
              "404 NOT_FOUND",
              "405 METHOD_NOT_ALLOWED",
              "406 NOT_ACCEPTABLE",
              "407 PROXY_AUTHENTICATION_REQUIRED",
              "408 REQUEST_TIMEOUT",
              "409 CONFLICT",
              "410 GONE",
              "411 LENGTH_REQUIRED",
              "412 PRECONDITION_FAILED",
              "413 PAYLOAD_TOO_LARGE",
              "413 REQUEST_ENTITY_TOO_LARGE",
              "414 URI_TOO_LONG",
              "414 REQUEST_URI_TOO_LONG",
              "415 UNSUPPORTED_MEDIA_TYPE",
              "416 REQUESTED_RANGE_NOT_SATISFIABLE",
              "417 EXPECTATION_FAILED",
              "418 I_AM_A_TEAPOT",
              "419 INSUFFICIENT_SPACE_ON_RESOURCE",
              "420 METHOD_FAILURE",
              "421 DESTINATION_LOCKED",
              "422 UNPROCESSABLE_ENTITY",
              "423 LOCKED",
              "424 FAILED_DEPENDENCY",
              "425 TOO_EARLY",
              "426 UPGRADE_REQUIRED",
              "428 PRECONDITION_REQUIRED",
              "429 TOO_MANY_REQUESTS",
              "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
              "451 UNAVAILABLE_FOR_LEGAL_REASONS",
              "500 INTERNAL_SERVER_ERROR",
              "501 NOT_IMPLEMENTED",
              "502 BAD_GATEWAY",
              "503 SERVICE_UNAVAILABLE",
              "504 GATEWAY_TIMEOUT",
              "505 HTTP_VERSION_NOT_SUPPORTED",
              "506 VARIANT_ALSO_NEGOTIATES",
              "507 INSUFFICIENT_STORAGE",
              "508 LOOP_DETECTED",
              "509 BANDWIDTH_LIMIT_EXCEEDED",
              "510 NOT_EXTENDED",
              "511 NETWORK_AUTHENTICATION_REQUIRED"
            ]
          },
          "timestamp": {
            "type": "string",
            "description": "L'horodatage de l'erreur.",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "description": "Le message d'erreur.",
            "example": "L'entité demandée n'a pas été trouvée."
          }
        },
        "description": "Représente la réponse d'erreur renvoyée par l'API."
      },
      "UserUpdateDto": {
        "title": "Schéma de demande de mise à jour d'utilisateur",
        "required": [
          "email",
          "firstName",
          "lastName",
          "role"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string",
            "description": "Prénom de l'utilisateur.",
            "example": "Said"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string",
            "description": "Nom de famille de l'utilisateur.",
            "example": "Alami"
          },
          "email": {
            "type": "string",
            "description": "Adresse e-mail de l'utilisateur.",
            "example": "said.alami@example.com"
          },
          "role": {
            "type": "string",
            "description": "Énumération des rôles utilisateur",
            "example": "MANAGER",
            "enum": [
              "ADMIN",
              "MANAGER",
              "CASHIER"
            ]
          }
        },
        "description": "Corps de la demande de mise à jour d'un utilisateur existant."
      },
      "UserDto": {
        "title": "Schéma de réponse utilisateur",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID de l'utilisateur.",
            "format": "int32",
            "example": 2
          },
          "firstName": {
            "type": "string",
            "description": "Prénom de l'utilisateur.",
            "example": "Said"
          },
          "lastName": {
            "type": "string",
            "description": "Nom de famille de l'utilisateur.",
            "example": "Alami"
          },
          "email": {
            "type": "string",
            "description": "Adresse e-mail de l'utilisateur.",
            "example": "said.alami@example.com"
          },
          "role": {
            "type": "string",
            "description": "Énumération des rôles utilisateur",
            "example": "MANAGER",
            "enum": [
              "ADMIN",
              "MANAGER",
              "CASHIER"
            ]
          }
        },
        "description": "Corps de réponse pour les détails de l'utilisateur."
      },
      "ChangePasswordRequest": {
        "title": "Schéma de demande de modification du mot de passe.",
        "required": [
          "newPassword",
          "oldPassword"
        ],
        "type": "object",
        "properties": {
          "oldPassword": {
            "maxLength": 2147483647,
            "minLength": 8,
            "type": "string",
            "description": "Ancien mot de passe de l'utilisateur."
          },
          "newPassword": {
            "maxLength": 2147483647,
            "minLength": 8,
            "type": "string",
            "description": "Nouveau mot de passe de l'utilisateur."
          }
        },
        "description": "Corps de la requête pour changer le mot de passe."
      },
      "ProductRequestDto": {
        "title": "Schéma de demande de produit.",
        "required": [
          "barCode",
          "category",
          "name",
          "purchasePrice",
          "sellingPriceExcludingTax",
          "taxRate"
        ],
        "type": "object",
        "properties": {
          "barCode": {
            "type": "string",
            "description": "Code-barres du produit.",
            "example": "1234567890"
          },
          "name": {
            "maxLength": 1000,
            "minLength": 2,
            "type": "string",
            "description": "Nom du produit.",
            "example": "Ordinateur portable"
          },
          "sellingPriceExcludingTax": {
            "type": "number",
            "description": "Prix de vente du produit hors taxe.",
            "example": 12999.99
          },
          "purchasePrice": {
            "type": "number",
            "description": "Prix d'achat du produit.",
            "example": 10000.99
          },
          "taxRate": {
            "type": "string",
            "description": "Énumération des taux de taxe",
            "example": "TEN",
            "enum": [
              "TWENTY",
              "FOURTEEN",
              "TEN",
              "SEVEN"
            ]
          },
          "category": {
            "type": "integer",
            "description": "ID de la catégorie du produit.",
            "format": "int32",
            "example": 1
          }
        },
        "description": "Corps de la demande pour la création/mise à jour d'un produit."
      },
      "ProductResponseDto": {
        "title": "Schéma de réponse de produit.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID du produit.",
            "format": "int32",
            "example": 1
          },
          "barCode": {
            "type": "string",
            "description": "Code-barres du produit.",
            "example": "1234567890"
          },
          "name": {
            "type": "string",
            "description": "Nom du produit.",
            "example": "Ordinateur portable"
          },
          "sellingPriceExcludingTax": {
            "type": "number",
            "description": "Prix de vente du produit hors taxe.",
            "example": 12999.99
          },
          "purchasePrice": {
            "type": "number",
            "description": "Prix d'achat du produit.",
            "example": 10000.99
          },
          "taxRate": {
            "type": "string",
            "description": "Énumération des taux de taxe",
            "example": "TEN",
            "enum": [
              "TWENTY",
              "FOURTEEN",
              "TEN",
              "SEVEN"
            ]
          },
          "category": {
            "type": "integer",
            "description": "ID de la catégorie du produit.",
            "format": "int32",
            "example": 1
          }
        },
        "description": "Corps de réponse pour la récupération d'un produit."
      },
      "CustomerUpdateDto": {
        "title": "Schéma de requête de mis à jour du client",
        "required": [
          "address",
          "email",
          "name",
          "phone"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 2,
            "type": "string",
            "description": "Nom du client",
            "example": "Acme Corp"
          },
          "email": {
            "type": "string",
            "description": "Adresse e-mail du client",
            "example": "acme-corp@example.com"
          },
          "phone": {
            "pattern": "^0\\d{9}$",
            "type": "string",
            "description": "Numéro de téléphone du client",
            "example": "0522567890"
          },
          "address": {
            "maxLength": 500,
            "minLength": 10,
            "type": "string",
            "description": "Adresse du client",
            "example": "123 Rue Principale, Ville, État, Code postal"
          }
        },
        "description": "Corps de requête pour mettre à jour un client"
      },
      "CustomerResponseDto": {
        "title": "Schéma de réponse du client.",
        "required": [
          "address",
          "email",
          "ice",
          "name",
          "phone"
        ],
        "type": "object",
        "properties": {
          "ice": {
            "type": "string",
            "description": "ICE du client.",
            "example": "563456789123456"
          },
          "name": {
            "type": "string",
            "description": "Nom du client.",
            "example": "Acme Corp"
          },
          "email": {
            "type": "string",
            "description": "Adresse e-mail du client.",
            "example": "acme-corp@example.com"
          },
          "phone": {
            "type": "string",
            "description": "Numéro de téléphone du client.",
            "example": "0522567890"
          },
          "address": {
            "type": "string",
            "description": "Adresse du client.",
            "example": "123 Rue Principale, Ville, État, Code postal."
          }
        },
        "description": "Corps de réponse pour un client."
      },
      "CategoryCreateDto": {
        "title": "Schéma de requête de création/mise a jour d'une catégorie",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Nom de la catégorie",
            "example": "Électronique"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Description de la catégorie",
            "example": "Catégorie pour les produits électroniques"
          }
        },
        "description": "Corps de requête pour créer/mise a jour d'une catégorie"
      },
      "UserCreateDto": {
        "title": "Schéma de requête de création d'utilisateur.",
        "required": [
          "email",
          "firstName",
          "lastName",
          "password",
          "role"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string",
            "description": "Prénom de l'utilisateur.",
            "example": "Said"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string",
            "description": "Le nom de l'utilisateur.",
            "example": "Alami"
          },
          "email": {
            "type": "string",
            "description": "Adresse e-mail de l'utilisateur.",
            "example": "said.alami@example.com"
          },
          "password": {
            "maxLength": 2147483647,
            "minLength": 8,
            "type": "string",
            "description": "Mot de passe de l'utilisateur.",
            "example": "mot-de-passe"
          },
          "role": {
            "type": "string",
            "description": "Énumération des rôles utilisateur",
            "example": "MANAGER",
            "enum": [
              "ADMIN",
              "MANAGER",
              "CASHIER"
            ]
          }
        },
        "description": "Corps de la requête pour créer un nouvel utilisateur."
      },
      "InvoiceCreateDto": {
        "title": "Schéma de demande de facture.",
        "required": [
          "customerICE",
          "items"
        ],
        "type": "object",
        "properties": {
          "customerICE": {
            "type": "string",
            "description": "Le numéro ICE du client auquel la facture est émise.",
            "example": "563456789123456"
          },
          "items": {
            "type": "array",
            "description": "La liste des articles et de leurs quantités à inclure dans la facture.",
            "items": {
              "$ref": "#/components/schemas/InvoiceItemDto"
            }
          }
        },
        "description": "Corps de la demande pour créer une facture."
      },
      "InvoiceItemDto": {
        "title": "Schéma des éléments de facture.",
        "required": [
          "productId",
          "quantity",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "L'ID du produit facturé.",
            "format": "int32"
          },
          "quantity": {
            "minimum": 1,
            "type": "integer",
            "description": "La quantité du produit facturé.",
            "format": "int32"
          },
          "unitPrice": {
            "minimum": 1,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "Le prix unitaire du produit facturé."
          }
        },
        "description": "Représente un article inclus dans une facture."
      },
      "CustomerCreateDto": {
        "title": "Schéma de requête de création du client",
        "required": [
          "address",
          "email",
          "ice",
          "name",
          "phone"
        ],
        "type": "object",
        "properties": {
          "ice": {
            "pattern": "^\\d{15}$",
            "type": "string",
            "description": "ICE du client",
            "example": "563456789123456"
          },
          "name": {
            "maxLength": 100,
            "minLength": 2,
            "type": "string",
            "description": "Nom du client",
            "example": "Acme Corp"
          },
          "email": {
            "type": "string",
            "description": "Adresse e-mail du client",
            "example": "acme-corp@example.com"
          },
          "phone": {
            "pattern": "^0\\d{9}$",
            "type": "string",
            "description": "Numéro de téléphone du client",
            "example": "0522567890"
          },
          "address": {
            "maxLength": 500,
            "minLength": 10,
            "type": "string",
            "description": "Adresse du client",
            "example": "123 Rue Principale, Ville, État, Code postal"
          }
        },
        "description": "Corps de requête pour créer un client"
      },
      "CartItemRequestDto": {
        "required": [
          "barcode",
          "cartId"
        ],
        "type": "object",
        "properties": {
          "cartId": {
            "pattern": "^\\d{7}$",
            "type": "string",
            "description": "L'ID du panier.",
            "example": "1234567"
          },
          "barcode": {
            "pattern": "^\\d*$",
            "type": "string",
            "description": "Le code-barres du produit.",
            "example": "1234567890"
          }
        },
        "description": "Schéma de demande pour l'élément du panier."
      },
      "AuthenticationRequest": {
        "title": "Schéma de la demande d'authentification.",
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email de l'utilisateur.",
            "example": "admin@mail.com"
          },
          "password": {
            "type": "string",
            "description": "Mot de passe de l'utilisateur.",
            "example": "secret-password"
          }
        },
        "description": "Corps de la demande d'authentification de l'utilisateur."
      },
      "AuthenticationResponse": {
        "title": "Schéma de la réponse d'authentification",
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Jeton JWT",
            "example": "eyJhbGciOiJIUzI1NiJ9..."
          },
          "id": {
            "type": "integer",
            "description": "ID de l'utilisateur",
            "format": "int64",
            "example": 1
          },
          "firstName": {
            "type": "string",
            "description": "Prénom",
            "example": "Youssef"
          },
          "lastName": {
            "type": "string",
            "description": "Nom",
            "example": "Faik"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "example": "yusef@mail.com"
          },
          "role": {
            "type": "string",
            "description": "Rôle de l'utilisateur",
            "example": "ADMIN"
          }
        },
        "description": "Corps de la réponse d'authentification de l'utilisateur"
      },
      "InvoiceDto": {
        "title": "Schéma de réponse de facture.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "L'ID de la facture",
            "format": "int32"
          },
          "issueDate": {
            "type": "string",
            "description": "La date à laquelle la facture a été émise.",
            "format": "date"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerResponseDto"
          },
          "items": {
            "type": "array",
            "description": "La liste des articles et de leurs quantités inclus dans la facture.",
            "items": {
              "$ref": "#/components/schemas/InvoiceItemResponseDto"
            }
          }
        },
        "description": "Corps de la réponse pour une facture."
      },
      "InvoiceItemResponseDto": {
        "title": "Schéma de réponse des éléments de facture.",
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/ProductResponseDto"
          },
          "quantity": {
            "type": "integer",
            "description": "La quantité du produit facturé.",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "description": "Le prix unitaire du produit facturé."
          }
        },
        "description": "Représente un article inclus dans une facture."
      },
      "ChartDataDto": {
        "title": "Schéma de réponse des données du graphique",
        "type": "object",
        "properties": {
          "dates": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          }
        },
        "description": "Corps de la réponse pour les données du graphique"
      },
      "Category": {
        "required": [
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "CartItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "barcode": {
            "pattern": "^\\d*$",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer_Authentication": {
        "type": "http",
        "description": "Un jeton JWT est requis pour accéder à cette API.\nLe jeton JWT peut être obtenu en fournissant l'e-mail/le mot de passe à l'API d'authentification.",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
